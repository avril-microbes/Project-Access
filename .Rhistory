shinyApp(ui, server,  options = list(height = 800))
world_vars <- names(st_drop_geometry(waha_slf.census2[c(8,12:21, 29,30)]))
ui <- fluidPage(
tmapOutput("map"),
selectInput("var", "Variable", world_vars)
)
server <- function(input, output, session) {
output$map <- renderTmap({
tm_shape(waha_slf.census2) +
tm_dots(col = input$`var`,
palette = "viridis",
style = "cont",
size = 0.125,
alpha = 0.7,
id = c("name"),
colorNA = "grey",
textNA = "Missing",
popup.vars = c("Health Authority:" = "health",
"Variable:" = input$`var`), title = gsub(".*: ", "", input$`var`)) +
tm_shape(waha_bb) + tm_borders() +
tm_shape(slf_bb) + tm_borders() +
tm_scale_bar() +
tm_compass(type="radar", position=c("left", "top"), show.labels = 3)
})
}
shinyApp(ui, server,  options = list(height = 800))
waha_slf.census2
waha_slf.census2 %>% filter(Population == 0)
# filter out region with no population data
waha_slf.census3 <- waha_slf.census2 %>% filter(Population != 0)
waha_slf.census3
# rename variables
names(waha_slf.census3) <- gsub(".*: ", "", names(waha_slf.census3))
waha_slf.census3
# gather
waha_slf.census3 %>% tidyr::gather()
# gather
waha_slf.census3 %>% tidyr::gather(key, value)
# gather
waha_slf.census3 %>% tidyr::gather(key, value)
# filter out region with no population data
waha_slf.census3 <- waha_slf.census2 %>% filter(Population != 0) %>%
st_drop_geometry()
# rename variables
names(waha_slf.census3) <- gsub(".*: ", "", names(waha_slf.census3))
# gather
waha_slf.census3 %>% tidyr::gather(key, value)
# gather
waha_slf.census4 <- waha_slf.census3 %>% tidyr::gather(key, value)
# plot box plot
waha_slf.census3 %>%
ggplot() +
geom_boxplot(aes(color = health)) +
facet_wrap(~key)
# gather
waha_slf.census4 <- waha_slf.census3 %>% tidyr::gather(key, value, -health)
# plot box plot
waha_slf.census3 %>%
ggplot() +
geom_boxplot(aes(color = health)) +
facet_wrap(~key)
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(color = health)) +
facet_wrap(~key)
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = value, color = health)) +
facet_wrap(~key)
head(waha_slf.census4)
names(waha_slf.census3)
names(waha_slf.census3)[9:29]
names(waha_slf.census3)[9:21]
names(waha_slf.census3)[9:29]
# gather
waha_slf.census4 <- waha_slf.census3 %>%
tidyr::gather(key, value, -health) %>%
filter(key %in% names(waha_slf.census3)[9:29])
waha_slf.census4
head(waha_slf.census4)
# gather
waha_slf.census4 <- waha_slf.census3 %>%
tidyr::gather(key, value, -health) %>%
filter(key %in% names(waha_slf.census3)[10:29])
head(waha_slf.census4)
names(waha_slf.census3)[10:29]
names(waha_slf.census3)
# gather
waha_slf.census4 <- waha_slf.census3 %>%
tidyr::gather(key, value, -health) %>%
filter(key %in% names(waha_slf.census3)[12:29])
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = value, color = health)) +
facet_wrap(~.key)
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = value, color = health)) +
facet_wrap(~key)
ggplot(waha_slf.census3) +
geom_boxplot(aes(y = Population))
ggplot(waha_slf.census3) +
geom_boxplot(aes(y = Population, color = health))
# gather
waha_slf.census4 <- waha_slf.census3 %>%
tidyr::gather(key, value) %>%
filter(key %in% names(waha_slf.census3)[12:29])
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = value, color = health)) +
facet_wrap(~key)
# gather
waha_slf.census4 <- waha_slf.census3 %>%
tidyr::gather(key, value, -health) %>%
filter(key %in% names(waha_slf.census3)[12:29])
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = value, color = health)) +
facet_wrap(~key)
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = as.numeric(value), color = health)) +
facet_wrap(~key)
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = as.numeric(value), color = health)) +
facet_wrap(~key) +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = as.numeric(value), color = health)) +
facet_wrap(~key, scales = "free") +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = as.numeric(value), color = as.factor(health))) +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority")
# plot box plot
waha_slf.census4 %>%
ggplot() +
geom_boxplot(aes(y = as.numeric(value), color = as.factor(health))) +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority") +
geom_jitter(shape=16, position=position_jitter(0.2)) +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(y = as.numeric(value), color = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority") +
geom_jitter(shape=16, position=position_jitter(0.2)) +
theme_bw()
# plot box plot
waha_slf.comp <- waha_slf.census4 %>%
ggplot(aes(y = as.numeric(value), color = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority") +
theme_bw()
waha_slf.com +  geom_jitter(shape=16, position=position_jitter(0.2)) +
```
waha_slf.com +  geom_jitter(shape=16, position=position_jitter(0.2))
waha_slf.comp +  geom_jitter(shape=16, position=position_jitter(0.2))
# plot box plot
waha_slf.comp <- waha_slf.census4 %>%
ggplot(aes(y = as.numeric(value), color = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority") +
scale_x_discrete(limits=c("WAHA" ,"SLFNHA")) +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(y = as.numeric(value), color = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority") +
scale_x_discrete(limits=c("WAHA" ,"SLFNHA")) +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = key, y = as.numeric(value), color = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority") +
scale_x_discrete(limits=c("WAHA" ,"SLFNHA")) +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = key, y = as.numeric(value), color = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority") +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = health, y = as.numeric(value), color = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(title = "Health authority") +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(),alpha=0.3) +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw()
# plot box plot
waha_slf.census4 %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# filter variables that are more interesting
var_int <- c("Population", "Population density per square kilometre", "Major repairs needed (%)", "Overcrowded (%)")
# plot box plot
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
waha_slf.census3$
# filter variables that are more interesting
var_int <- c("Population, 2016", "Population density per square kilometre", "Major repairs needed (%)", "Overcrowded (%)")
# plot box plot
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# filter variables that are more interesting
var_int <- c("Population, 2016", "Population density per square kilometre", "Major repairs needed (%)", "Overcrowded (%)")
# plot box plot
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_boxplot() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# plot box plot
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin() +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# plot box plot
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.2 ) +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black")
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="linerange", color="black") +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority", ylab = "Value", xlab = "") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority", y = "Value", x = "") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# rename variables
names(waha_slf.census3) <- gsub(".*: ", "", names(waha_slf.census3))
names(waha_slf.census4)
names(waha_slf.census3)
# filter variables that are more interesting
var_int <- c("Population, 2016", "Population density per square kilometre", "Major repairs needed (%)", "Overcrowded (%)", "0 to 14 years", "65 years and over")
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free") +
labs(fill = "Health authority", y = "Value", x = "") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(here("figures/waha_slf_demo_violin.png"))
world_vars <- names(st_drop_geometry(waha_slf.census2[c(8,12:21, 29,30)]))
ui <- fluidPage(
tmapOutput("map"),
selectInput("var", "Variable", world_vars)
)
server <- function(input, output, session) {
output$map <- renderTmap({
tm_shape(waha_slf.census2) +
tm_dots(col = input$`var`,
palette = "viridis",
style = "cont",
size = 0.125,
alpha = 0.7,
id = c("name"),
colorNA = "grey",
textNA = "Missing",
popup.vars = c("Health Authority:" = "health",
"Variable:" = input$`var`), title = gsub(".*: ", "", input$`var`)) +
tm_shape(waha_bb) + tm_borders() +
tm_shape(slf_bb) + tm_borders() +
tm_scale_bar() +
tm_compass(type="radar", position=c("left", "top"), show.labels = 3)
})
}
shinyApp(ui, server,  options = list(height = 800))
ggsave(here("figures/waha_slf_demo_violin.png"), width = 4, height = 5)
ggsave(here("figures/waha_slf_demo_violin.png"), width = 5, height = 5)
ggsave(here("figures/waha_slf_demo_violin.png"), width = 7, height = 5)
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free", labeller = label_wrap_gen(width=10)) +
labs(fill = "Health authority", y = "Value", x = "") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free", labeller = label_wrap_gen(width = 30)) +
labs(fill = "Health authority", y = "Value", x = "") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(here("figures/waha_slf_demo_violin.png"), width = 5, height = 5)
ggsave(here("figures/waha_slf_demo_violin.png"), width = 6, height = 5)
ggsave(here("figures/waha_slf_demo_violin.png"), width = 7, height = 6)
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free", labeller = label_wrap_gen(width = 20)) +
labs(fill = "Health authority", y = "Value", x = "") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(here("figures/waha_slf_demo_violin.png"), width = 7, height = 6)
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free", labeller = label_wrap_gen(width = 20)) +
labs(fill = "Health authority", y = "Value", x = "") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(here("figures/waha_slf_demo_violin.png"), width = 7, height = 6)
# Violine plot with overlaid points
waha_slf.census4 %>%
filter(key %in% var_int) %>%
ggplot(aes(x = health, y = as.numeric(value), fill = as.factor(health))) +
geom_violin(trim = F) +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="black") +
facet_wrap(~key, scales = "free", labeller = label_wrap_gen(width = 25)) +
labs(fill = "Health authority", y = "Value", x = "") +
geom_point(position=position_jitterdodge(), alpha=0.3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(here("figures/waha_slf_demo_violin.png"), width = 7, height = 6)
waha_slf.census3$`Population density per square kilometre`
